@model EasyHosts.Dashboard.Models.Bedroom

@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card mb-3">
    <div class="bg-holder d-none d-lg-block bg-card" style="background-image:url(../../Content/Images/icons/spot-illustrations/corner-1.png);">
    </div>

    <div class="card-body position-relative">
        <div class="row">
            <div class="col-lg-8">
                <h3>Cadastro de Quartos</h3>
                <p class="mb-0">Preencha as seguinte informações.</p>
            </div>
        </div>
    </div>
</div>

<div class="card mb-3">
    <div class="card-header">
        <div class="row flex-between-end">
            <div class="col-auto align-self-center">
                <h5 class="mb-0">Formulário</h5>
            </div>
        </div>
    </div>
    <div class="card-body bg-light">
        <div class="tab-content">
            @using (Html.BeginForm("Create", "Bedroom", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

            <div class="form">
                <div class="mb-3">
                    @Html.LabelFor(model => model.NameBedroom, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.NameBedroom, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })
                    @Html.ValidationMessageFor(model => model.NameBedroom, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", @placeholder = "Valor" } })
                    @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Descrição" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label" })
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-select", @placeholder = "Estado" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.TypeBedroomId, "Tipo de quarto", htmlAttributes: new { @class = "form-label"})
                    @Html.DropDownList("TypeBedroomId", null, htmlAttributes: new { @class = "form-select", @placeholder = "Tipo de quarto" })
                    @Html.ValidationMessageFor(model => model.TypeBedroomId, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "form-label" })
                    <input name="file" class="form-control" type="file" />
                </div>
                <div>
                    <input type="submit" value="Novo" class="btn btn-warning" />
                    @Html.ActionLink("Voltar", "Index", "", new { @class = "btn btn-secondary" })
                </div>
            </div>
            }
        </div>
    </div>
</div>
